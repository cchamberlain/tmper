#!/usr/bin/env bash
#
# usage: tmper

NC='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
YELLOW='\033[1;33m'

if ! hash rimraf 2>/dev/null; then
  >&2 printf "%b- rimraf required, installing globally... -%b" "$CYAN" "$NC"
  npm install -g rimraf
fi

if ! hash mkdirp 2>/dev/null; then
  >&2 printf "%b- mkdirp required, installing globally... -%b" "$CYAN" "$NC"
  npm install -g mkdirp
fi

TMP_ROOT="${TMP-"$TEMP"}"
DELETE_FLAG=false
NAME_LENGTH=5


usage_short="${BLUE}usage: tmper [-d /temp/dir]"
usage_long="$usage_short\n-d: safe delete temporary directory at path (default: $DELETE_FLAG)"

usage_short="$usage_short\nuse -h to get supported command information.${NC}"

options=":d:h"
shopt -u nocasematch
OPTIND=1
while getopts "$options" opt ; do
    case "$opt" in
    d )
      DELETE_FLAG=true
      DIR_ROOT="$OPTARG"
      ;;
   h )
      >&2 printf -- "%b\n" "$usage_long"
      exit 0
      ;;
    \?)
      >&2 printf -- "unknown option: -%b\n" "$OPTARG"
      >&2 printf -- "%b\n" "$usage_short"
      exit 1
      ;;
    : )
      >&2 printf -- "missing option argument for -%b\n" "$OPTARG"
      >&2 printf -- "%b\n" "$usage_short"
      exit 1
      ;;
    * )
      >&2 printf -- "unimplemented option: -%b\n" "$OPTARG"
      >&2 printf -- "%b\n" "$usage_short"
      exit 1
    esac
done
shift $((OPTIND-1))

generate_name() {
  printf -- "%s" "$(</dev/urandom tr -dc a-z | head -c${1:-32})"
}

if [ "$DELETE_FLAG" = true ]; then
  if [[ $DIR_ROOT == "$TMP_ROOT"* ]]; then
    rimraf "$DIR_ROOT"
    exit 0
  fi
  >&2 printf -- "%b- %s is not a part of temp directory, will not delete... -%b" "$RED" "$DIR_ROOT" "$NC"
  exit 1
fi

tmp_name="$(generate_name "$NAME_LENGTH")"
tmp_dir="$TMP_ROOT/$tmp_name"
while [ -e "$tmp_dir" ] ; do
  tmp_name="$(generate_name "$NAME_LENGTH")"
  tmp_dir="$TMP_ROOT/$tmp_name"
done

mkdirp "$tmp_dir" &>/dev/null
printf -- "%s" "$tmp_dir"